plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'com.google.osdetector' version '1.7.3'
}

group = 'com.github.qpcrummer'
version = '1.0.2'

repositories {
    mavenCentral()
}

project.ext.lwjglVersion = "3.3.4"

ext {
    lwjglVersion = '3.3.4'

    //LWJGL modules used: minimal OpenGL
    lwjglModules = ['lwjgl', 'lwjgl-assimp', 'lwjgl-glfw', 'lwjgl-openal', 'lwjgl-opengl', 'lwjgl-stb']

    platforms = ['windows', 'linux', 'macos']
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    implementation 'io.github.spair:imgui-java-app:1.86.11'

    //get recommended dependency versions from the LWJGL BOM
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    platforms.eachWithIndex { platform, index ->
        //add LWJGL modules and the current OS's natives to the compile and runtime classpaths
        lwjglModules.each {
            implementation "org.lwjgl:$it"
            if (it != 'lwjgl-egl')  //lwjgl-egl has no native libraries
                runtimeOnly "org.lwjgl:$it::natives-${platform}"
        }
    }
}

tasks.register('extractLwjglManifest', Copy) {
    from {
        configurations.compileClasspath.filter { it.name == "lwjgl-${lwjglVersion}.jar" }
                .collect { zipTree(it) }
    }
    include 'META-INF/MANIFEST.MF'
    into "$rootProject.layout.buildDirectory/tmp"
}

test {
    useJUnitPlatform()
}

shadowJar {
    manifest {
        attributes(
                'Main-Class': 'com.github.qpcrummer.Main'
        )
    }
    archiveClassifier.set('')
    archiveVersion.set('')
}

tasks.register('printVersionName') {
    println version
}